import React, { useState } from 'react';

// –ú–æ–∫-—Ö—É–∫–∏ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const useCart = () => ({
  items: [
    { id: 1, name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung Galaxy', price: 25000, quantity: 1 },
    { id: 2, name: '–ù–∞—É—à–Ω–∏–∫–∏ AirPods', price: 8000, quantity: 2 }
  ],
  getTotal: () => 41000,
  clearCart: () => console.log('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞')
});

const useNavigate = () => (path) => console.log(`–ù–∞–≤–∏–≥–∞—Ü–∏—è –∫: ${path}`);

enum PaymentMethod {
  CASH = 'cash',
  CARD = 'card',
  QR = 'qr',
  INSTALLMENT = 'installment',
}

enum DeliveryMethod {
  DELIVERY = 'delivery',
  PICKUP = 'pickup',
}

interface FormData {
  firstName: string;
  lastName: string;
  phone: string;
  email: string;
  address: string;
  city: string;
  notes: string;
  deliveryMethod: DeliveryMethod;
  paymentMethod: PaymentMethod;
  bank: string | null;
  pickupBranch: string;
}

const banks = [
  { id: 'mbank', name: '–ú–ë–∞–Ω–∫' },
  { id: 'bakaibank', name: '–ë–∞–∫–∞–π –ë–∞–Ω–∫' },
  { id: 'companion', name: '–ö–æ–º–ø–∞–Ω—å–æ–Ω' },
  { id: 'rsk', name: '–†–°–ö –ë–∞–Ω–∫' },
];

const Checkout = () => {
  const { items, getTotal, clearCart } = useCart();
  const navigate = useNavigate();

  const [formData, setFormData] = useState<FormData>({
    firstName: '',
    lastName: '',
    phone: '',
    email: '',
    address: '',
    city: '–ë–∏—à–∫–µ–∫',
    notes: '',
    deliveryMethod: DeliveryMethod.DELIVERY,
    paymentMethod: PaymentMethod.CASH,
    bank: null,
    pickupBranch: '',
  });

  const [errors, setErrors] = useState<Partial<Record<keyof FormData, string>>>({});

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));

    // –û—á–∏—Å—Ç–∏—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    if (errors[name as keyof FormData]) {
      setErrors(prev => {
        const newErrors = { ...prev };
        delete newErrors[name as keyof FormData];
        return newErrors;
      });
    }
  };

  const handlePaymentMethodChange = (value: string) => {
    const paymentMethod = value as PaymentMethod;
    setFormData(prev => ({
      ...prev,
      paymentMethod,
      bank: paymentMethod === PaymentMethod.INSTALLMENT ? 'mbank' : null
    }));
  };

  const handleDeliveryMethodChange = (value: string) => {
    setFormData(prev => ({
      ...prev,
      deliveryMethod: value as DeliveryMethod
    }));
  };

  const validate = (): boolean => {
    const newErrors: Partial<Record<keyof FormData, string>> = {};

    if (!formData.firstName.trim()) newErrors.firstName = '–í–≤–µ–¥–∏—Ç–µ –∏–º—è';
    if (!formData.lastName.trim()) newErrors.lastName = '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é';
    if (!formData.phone.trim()) newErrors.phone = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω';
    if (!formData.email.trim()) newErrors.email = '–í–≤–µ–¥–∏—Ç–µ email';

    if (formData.deliveryMethod === DeliveryMethod.DELIVERY) {
      if (!formData.address.trim()) newErrors.address = '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏';
      if (!formData.city.trim()) newErrors.city = '–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥';
    }

    if (formData.deliveryMethod === DeliveryMethod.PICKUP && !formData.pickupBranch) {
      newErrors.pickupBranch = '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const paymentMethodLabel = (method: string) => {
    switch (method) {
      case PaymentMethod.CASH:
        return '–ù–∞–ª–∏—á–Ω—ã–º–∏';
      case PaymentMethod.CARD:
        return '–ö–∞—Ä—Ç–æ–π';
      case PaymentMethod.QR:
        return 'QR-–∫–æ–¥';
      case PaymentMethod.INSTALLMENT:
        return '–†–∞—Å—Å—Ä–æ—á–∫–∞';
      default:
        return '‚Äî';
    }
  };

  const getBankName = (id: string | null) => {
    const bank = banks.find(b => b.id === id);
    return bank ? bank.name : '‚Äî';
  };

  const handleSubmit = async () => {

    if (!validate()) return;

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è WhatsApp
    const message = `üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!
–ò–º—è: ${formData.firstName} ${formData.lastName}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
Email: ${formData.email}
–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${formData.deliveryMethod === DeliveryMethod.DELIVERY ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤—ã–≤–æ–∑'}
${formData.deliveryMethod === DeliveryMethod.PICKUP
      ? `–°–∞–º–æ–≤—ã–≤–æ–∑: ${formData.pickupBranch}`
      : `–ì–æ—Ä–æ–¥: ${formData.city}\n–ê–¥—Ä–µ—Å: ${formData.address}`
    }
–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${paymentMethodLabel(formData.paymentMethod)}${formData.paymentMethod === PaymentMethod.INSTALLMENT ? ` (${getBankName(formData.bank)})` : ''}
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${formData.notes || '‚Äî'}

–¢–æ–≤–∞—Ä—ã:
${items.map(item => `‚Ä¢ ${item.name} ‚Äî ${item.quantity} —à—Ç. ${item.price.toLocaleString()} —Å`).join('\n')}

üí∞ –ò—Ç–æ–≥–æ: ${getTotal().toLocaleString()} —Å`;

    // WhatsApp –Ω–æ–º–µ—Ä (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π)
    const whatsappNumber = '996703763346';
    const encodedMessage = encodeURIComponent(message);
    const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodedMessage}`;

    // –û—Ç–∫—Ä—ã—Ç–∏–µ WhatsApp
    window.open(whatsappUrl, '_blank');

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
    clearCart();
    navigate('/order-confirmation');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="container mx-auto px-4 py-8">
        <h1 className="text-3xl font-bold text-center mb-8">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

        <div className="flex flex-col lg:flex-row gap-8 max-w-6xl mx-auto">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ */}
          <div className="lg:w-2/3 space-y-6">
            {/* –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4">–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ò–º—è *
                  </label>
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleInputChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.firstName ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.firstName && <p className="text-sm text-red-500 mt-1">{errors.firstName}</p>}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –§–∞–º–∏–ª–∏—è *
                  </label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleInputChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.lastName ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.lastName && <p className="text-sm text-red-500 mt-1">{errors.lastName}</p>}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    placeholder="+996 XXX XXX XXX"
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.phone ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.phone && <p className="text-sm text-red-500 mt-1">{errors.phone}</p>}
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.email ? 'border-red-500' : 'border-gray-300'
                    }`}
                  />
                  {errors.email && <p className="text-sm text-red-500 mt-1">{errors.email}</p>}
                </div>
              </div>
            </div>

            {/* –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4">–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è</h2>

              <div className="space-y-3 mb-4">
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="deliveryMethod"
                    value={DeliveryMethod.DELIVERY}
                    checked={formData.deliveryMethod === DeliveryMethod.DELIVERY}
                    onChange={(e) => handleDeliveryMethodChange(e.target.value)}
                    className="mr-3"
                  />
                  <span className="font-medium">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                </label>
                <label className="flex items-center">
                  <input
                    type="radio"
                    name="deliveryMethod"
                    value={DeliveryMethod.PICKUP}
                    checked={formData.deliveryMethod === DeliveryMethod.PICKUP}
                    onChange={(e) => handleDeliveryMethodChange(e.target.value)}
                    className="mr-3"
                  />
                  <span className="font-medium">–°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞</span>
                </label>
              </div>

              {formData.deliveryMethod === DeliveryMethod.DELIVERY && (
                <div className="space-y-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ì–æ—Ä–æ–¥
                    </label>
                    <select
                      name="city"
                      value={formData.city}
                      onChange={handleInputChange}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                    >
                      <option value="–ë–∏—à–∫–µ–∫">–ë–∏—à–∫–µ–∫</option>
                      <option value="–û—à">–û—à</option>
                      <option value="–î–∂–∞–ª–∞–ª-–ê–±–∞–¥">–î–∂–∞–ª–∞–ª-–ê–±–∞–¥</option>
                      <option value="–ö–∞—Ä–∞–∫–æ–ª">–ö–∞—Ä–∞–∫–æ–ª</option>
                      <option value="–ù–∞—Ä—ã–Ω">–ù–∞—Ä—ã–Ω</option>
                    </select>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ *
                    </label>
                    <input
                      type="text"
                      name="address"
                      value={formData.address}
                      onChange={handleInputChange}
                      placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                      className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                        errors.address ? 'border-red-500' : 'border-gray-300'
                      }`}
                    />
                    {errors.address && <p className="text-sm text-red-500 mt-1">{errors.address}</p>}
                  </div>
                </div>
              )}

              {formData.deliveryMethod === DeliveryMethod.PICKUP && (
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª *
                  </label>
                  <select
                    name="pickupBranch"
                    value={formData.pickupBranch}
                    onChange={handleInputChange}
                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ${
                      errors.pickupBranch ? 'border-red-500' : 'border-gray-300'
                    }`}
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª</option>
                    <option value="–û—à—Å–∫–∏–π —Ä—ã–Ω–æ–∫, —É–ª. –ë–µ–π—à–µ–Ω–∞–ª–∏–µ–≤–æ–π, 42">
                      –û—à—Å–∫–∏–π —Ä—ã–Ω–æ–∫ ‚Äî —É–ª. –ë–µ–π—à–µ–Ω–∞–ª–∏–µ–≤–æ–π, 42
                    </option>
                    <option value="–ê–Æ GRAND, —É–ª. –í–∞–ª–∏—Ö–∞–Ω–æ–≤–∞ 2 —Å—Ç8, 1 —ç—Ç–∞–∂, 101/1 –±—É—Ç–∏–∫">
                      –ê–Æ GRAND ‚Äî –í–∞–ª–∏—Ö–∞–Ω–æ–≤–∞ 2 —Å—Ç8, 1 —ç—Ç–∞–∂, 101/1
                    </option>
                  </select>
                  {errors.pickupBranch && <p className="text-sm text-red-500 mt-1">{errors.pickupBranch}</p>}
                </div>
              )}
            </div>

            {/* –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>

              <div className="space-y-4">
                <label className="flex items-start">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value={PaymentMethod.CASH}
                    checked={formData.paymentMethod === PaymentMethod.CASH}
                    onChange={(e) => handlePaymentMethodChange(e.target.value)}
                    className="mt-1 mr-3"
                  />
                  <div>
                    <div className="font-medium">–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</div>
                    <div className="text-sm text-gray-500">–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑–µ</div>
                  </div>
                </label>

                <label className="flex items-start">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value={PaymentMethod.CARD}
                    checked={formData.paymentMethod === PaymentMethod.CARD}
                    onChange={(e) => handlePaymentMethodChange(e.target.value)}
                    className="mt-1 mr-3"
                  />
                  <div>
                    <div className="font-medium">–û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</div>
                    <div className="text-sm text-gray-500">Visa, MasterCard</div>
                  </div>
                </label>

                <label className="flex items-start">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value={PaymentMethod.QR}
                    checked={formData.paymentMethod === PaymentMethod.QR}
                    onChange={(e) => handlePaymentMethodChange(e.target.value)}
                    className="mt-1 mr-3"
                  />
                  <div>
                    <div className="font-medium">–ü–µ—Ä–µ–≤–æ–¥ –ø–æ QR-–∫–æ–¥—É</div>
                    <div className="text-sm text-gray-500">–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏ –ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É</div>
                  </div>
                </label>

                <label className="flex items-start">
                  <input
                    type="radio"
                    name="paymentMethod"
                    value={PaymentMethod.INSTALLMENT}
                    checked={formData.paymentMethod === PaymentMethod.INSTALLMENT}
                    onChange={(e) => handlePaymentMethodChange(e.target.value)}
                    className="mt-1 mr-3"
                  />
                  <div>
                    <div className="font-medium">–†–∞—Å—Å—Ä–æ—á–∫–∞</div>
                    <div className="text-sm text-gray-500">–ü–æ–∫—É–ø–∫–∞ –≤ —Ä–∞—Å—Å—Ä–æ—á–∫—É —á–µ—Ä–µ–∑ –±–∞–Ω–∫-–ø–∞—Ä—Ç–Ω–µ—Ä</div>
                  </div>
                </label>
              </div>

              {formData.paymentMethod === PaymentMethod.INSTALLMENT && (
                <div className="mt-4">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í—ã–±–µ—Ä–∏—Ç–µ –±–∞–Ω–∫
                  </label>
                  <select
                    name="bank"
                    value={formData.bank || ''}
                    onChange={(e) => setFormData(prev => ({ ...prev, bank: e.target.value }))}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  >
                    {banks.map(bank => (
                      <option key={bank.id} value={bank.id}>{bank.name}</option>
                    ))}
                  </select>
                </div>
              )}
            </div>

            {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h2>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
                </label>
                <textarea
                  name="notes"
                  value={formData.notes}
                  onChange={handleInputChange}
                  rows={3}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ, –æ—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è..."
                ></textarea>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
          <div className="lg:w-1/3">
            <div className="bg-white rounded-lg shadow-md p-6 sticky top-4">
              <h2 className="text-xl font-semibold mb-4">–í–∞—à –∑–∞–∫–∞–∑</h2>

              <div className="space-y-3 mb-4">
                {items.map((item) => (
                  <div key={item.id} className="flex justify-between py-2 border-b">
                    <div>
                      <div className="font-medium text-sm">{item.name}</div>
                      <div className="text-xs text-gray-500">{item.quantity} x {item.price.toLocaleString()} —Å</div>
                    </div>
                    <div className="font-medium">
                      {(item.price * item.quantity).toLocaleString()} —Å
                    </div>
                  </div>
                ))}
              </div>

              <div className="border-t pt-4 space-y-2">
                <div className="flex justify-between">
                  <span className="text-gray-600">–¢–æ–≤–∞—Ä–æ–≤ ({items.length})</span>
                  <span>{getTotal().toLocaleString()} —Å</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-gray-600">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                  <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
                </div>
                <div className="border-t pt-3 flex justify-between font-bold text-lg">
                  <span>–ò—Ç–æ–≥–æ</span>
                  <span>{getTotal().toLocaleString()} —Å</span>
                </div>
              </div>

              <button
                type="button"
                onClick={handleSubmit}
                className="w-full bg-blue-600 text-white py-3 px-4 rounded-md hover:bg-blue-700 transition-colors font-medium mt-6"
              >
                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
              </button>

              <p className="text-xs text-gray-500 text-center mt-4">
                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ–∫—É–ø–∫–∏
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Checkout;